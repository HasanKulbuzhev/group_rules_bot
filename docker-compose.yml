version: '3'
services:

    #PHP Service
    app:
        build:
            context: .
            dockerfile: docker/Dockerfile
        image: digitalocean.com/php
        container_name: ${APP_CONTAINER_NAME}
        restart: unless-stopped
        tty: true
        environment:
            SERVICE_NAME: app
            SERVICE_TAGS: dev
        working_dir: /var/www
        volumes:
            - ./:/var/www
            - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
        networks:
            - app-network

    redis:
      image: redis:6.2.6-alpine3.15
      ports:
        - ${REDIS_PORT}:6379
      command:
        - '/etc/redis/redis.conf'
      restart: always
      sysctls:
        net.core.somaxconn: 1024
      volumes:
        - rule_bot_redis_volume:/data
        - ./docker/redis:/etc/redis
      networks:
        - app-network

  #Nginx Service
    webserver:
        image: nginx:alpine
        container_name: ${NGINX_NAME}
        restart: unless-stopped
        tty: true
        ports:
            - "8000:80"
            - "443:443"
        volumes:
            - ./:/var/www
            - ./docker/nginx/conf.d/:/etc/nginx/conf.d/
        networks:
            - app-network

    #Postgress Service
    db_pg:
        image: postgres:13.1
        container_name: ${DB_PG_NAME}
        ports:
            - "54329:5432"
        volumes:
            - rule_bot_postgres_volume:/var/lib/postgresql/data
        environment:
            - POSTGRES_USER=laravel
            - POSTGRES_PASSWORD=laravel
            - POSTGRES_DB=laravel
        networks:
            - app-network

    #MySQL Service
    db_mysql:
        image: mysql:5.7.22
        container_name: ${DB_NAME}
        restart: unless-stopped
        tty: true
        volumes:
            - rule_bot_mysql_volume:/var/lib/mysql
            - ./docker/mysql/my.cnf:/etc/mysql/my.cnf
        ports:
            - ${DB_PORT}:3306
        environment:
            MYSQL_DATABASE: laravel
            MYSQL_USER: laravel
            MYSQL_USER_PASSWORD: laravel
            MYSQL_ROOT_PASSWORD: laravel
        networks:
            - app-network

#Docker Networks
networks:
    app-network:
        driver: bridge

volumes:
  ${DB_CONTAINER_VOLUME}:
    driver: local
  ${DB_PG_CONTAINER_VOLUME}:
        driver: local
  ${DB_REDIS_CONTAINER_VOLUME}:
      driver: local
